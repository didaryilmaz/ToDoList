{"ast":null,"code":"var _jsxFileName = \"/Users/didaryilmaz/Documents/GitHub/ToDoList/src/LoginPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = () => {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const navigate = useNavigate(); // Yönlendirme için hook\n\n  const handleLogin = async event => {\n    event.preventDefault();\n    try {\n      const response = await fetch(\"http://localhost:5103/api/Auth/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          username,\n          password\n        })\n      });\n      if (response.ok) {\n        const data = await response.json();\n\n        // Token varsa localStorage’a kaydet (PrivateRoute için)\n        if (data.token) {\n          localStorage.setItem(\"token\", data.token);\n        }\n\n        // Başarılı giriş -> yönlendir\n        navigate(\"/todos\");\n      } else {\n        const errorText = await response.text();\n        throw new Error(errorText);\n      }\n    } catch (error) {\n      console.error(\"Login hatası:\", error.message);\n      alert(\"Giriş başarısız! Lütfen bilgilerinizi kontrol edin.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Giri\\u015F Yap\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Kullan\\u0131c\\u0131 Ad\\u0131\",\n        value: username,\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"\\u015Eifre\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Giri\\u015F Yap\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPage, \"JBV44+s3MGwvm5P+UO1Bab3M9dc=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","LoginPage","_s","username","setUsername","password","setPassword","navigate","handleLogin","event","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","data","json","token","localStorage","setItem","errorText","text","Error","error","console","message","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","e","target","_c","$RefreshReg$"],"sources":["/Users/didaryilmaz/Documents/GitHub/ToDoList/src/LoginPage.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst LoginPage = () => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const navigate = useNavigate(); // Yönlendirme için hook\n\n  const handleLogin = async (event) => {\n    event.preventDefault();\n\n    try {\n      const response = await fetch(\"http://localhost:5103/api/Auth/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ username, password }),\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n\n        // Token varsa localStorage’a kaydet (PrivateRoute için)\n        if (data.token) {\n          localStorage.setItem(\"token\", data.token);\n        }\n\n        // Başarılı giriş -> yönlendir\n        navigate(\"/todos\");\n      } else {\n        const errorText = await response.text();\n        throw new Error(errorText);\n      }\n    } catch (error) {\n      console.error(\"Login hatası:\", error.message);\n      alert(\"Giriş başarısız! Lütfen bilgilerinizi kontrol edin.\");\n    }\n  };\n\n  return (\n    <div>\n      <h2>Giriş Yap</h2>\n      <form onSubmit={handleLogin}>\n        <input\n          type=\"text\"\n          placeholder=\"Kullanıcı Adı\"\n          value={username}\n          onChange={(e) => setUsername(e.target.value)}\n        />\n        <input\n          type=\"password\"\n          placeholder=\"Şifre\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n        />\n        <button type=\"submit\">Giriş Yap</button>\n      </form>\n    </div>\n  );\n};\n\nexport default LoginPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}