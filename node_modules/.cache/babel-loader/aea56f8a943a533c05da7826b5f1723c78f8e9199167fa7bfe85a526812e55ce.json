{"ast":null,"code":"var _jsxFileName = \"/Users/didaryilmaz/Documents/GitHub/ToDoList/src/ToDoList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst YapilacaklarListesi = () => {\n  _s();\n  const [gorev, setGorev] = useState('');\n  const [gorevler, setGorevler] = useState([]);\n  const [tamamlananGorevler, setTamamlananGorevler] = useState([]);\n  useEffect(() => {\n    const storedGorevler = JSON.parse(localStorage.getItem('gorevler'));\n    const storedTamamlananGorevler = JSON.parse(localStorage.getItem('tamamlananGorevler'));\n    if (storedGorevler) {\n      setGorevler(storedGorevler);\n    }\n    if (storedTamamlananGorevler) {\n      setTamamlananGorevler(storedTamamlananGorevler);\n    }\n  }, []);\n  useEffect(() => {\n    localStorage.setItem('gorevler', JSON.stringify(gorevler));\n    localStorage.setItem('tamamlananGorevler', JSON.stringify(tamamlananGorevler));\n  }, [gorevler, tamamlananGorevler]);\n  const girisDegisti = event => {\n    setGorev(event.target.value);\n  };\n  const gorevEkle = () => {\n    if (gorev.trim() !== '') {\n      setGorevler([...gorevler, {\n        id: Date.now(),\n        isim: gorev\n      }]);\n      setGorev('');\n    }\n  };\n  const tamamlandi = id => {\n    const tamamlanan = gorevler.find(g => g.id === id);\n    if (tamamlanan) {\n      setTamamlananGorevler([...tamamlananGorevler, tamamlanan]);\n      setGorevler(gorevler.filter(g => g.id !== id));\n    }\n  };\n  const gorevSil = id => {\n    setGorevler(gorevler.filter(g => g.id !== id));\n    setTamamlananGorevler(tamamlananGorevler.filter(g => g.id !== id));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Yap\\u0131lacaklar Listesi\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: gorev,\n        onChange: girisDegisti\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: gorevEkle,\n        children: \"Ekle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Aktif G\\xF6revler\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: gorevler.map(g => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [g.isim, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => tamamlandi(g.id),\n            children: \"Tamamland\\u0131\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => gorevSil(g.id),\n            children: \"Sil\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 29\n          }, this)]\n        }, g.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Tamamlanan G\\xF6revler\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: tamamlananGorevler.map(g => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"del\", {\n            children: g.isim\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => gorevSil(g.id),\n            children: \"Sil\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 29\n          }, this)]\n        }, g.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n_s(YapilacaklarListesi, \"TiKYhDFmdHNSsYxsvmpMLiTNXSw=\");\n_c = YapilacaklarListesi;\nexport default YapilacaklarListesi;\nvar _c;\n$RefreshReg$(_c, \"YapilacaklarListesi\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","YapilacaklarListesi","_s","gorev","setGorev","gorevler","setGorevler","tamamlananGorevler","setTamamlananGorevler","storedGorevler","JSON","parse","localStorage","getItem","storedTamamlananGorevler","setItem","stringify","girisDegisti","event","target","value","gorevEkle","trim","id","Date","now","isim","tamamlandi","tamamlanan","find","g","filter","gorevSil","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onClick","map","_c","$RefreshReg$"],"sources":["/Users/didaryilmaz/Documents/GitHub/ToDoList/src/ToDoList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst YapilacaklarListesi = () => {\n    const [gorev, setGorev] = useState('');\n    const [gorevler, setGorevler] = useState([]);\n    const [tamamlananGorevler, setTamamlananGorevler] = useState([]);\n\n    useEffect(() => {\n        const storedGorevler = JSON.parse(localStorage.getItem('gorevler'));\n        const storedTamamlananGorevler = JSON.parse(localStorage.getItem('tamamlananGorevler'));\n\n        if (storedGorevler) {\n            setGorevler(storedGorevler);\n        }\n        if (storedTamamlananGorevler) {\n            setTamamlananGorevler(storedTamamlananGorevler);\n        }\n    }, []);\n\n    useEffect(() => {\n        localStorage.setItem('gorevler', JSON.stringify(gorevler));\n        localStorage.setItem('tamamlananGorevler', JSON.stringify(tamamlananGorevler));\n    }, [gorevler, tamamlananGorevler]);\n\n    const girisDegisti = (event) => {\n        setGorev(event.target.value);\n    };\n\n    const gorevEkle = () => {\n        if (gorev.trim() !== '') {\n            setGorevler([...gorevler, { id: Date.now(), isim: gorev }]);\n            setGorev('');\n        }\n    };\n\n    const tamamlandi = (id) => {\n        const tamamlanan = gorevler.find(g => g.id === id);\n        if (tamamlanan) {\n            setTamamlananGorevler([...tamamlananGorevler, tamamlanan]);\n            setGorevler(gorevler.filter(g => g.id !== id));\n        }\n    };\n\n    const gorevSil = (id) => {\n        setGorevler(gorevler.filter(g => g.id !== id));\n        setTamamlananGorevler(tamamlananGorevler.filter(g => g.id !== id));\n    };\n\n    return (\n        <div>\n            <h2>Yapılacaklar Listesi</h2>\n            <div>\n                <input type=\"text\" value={gorev} onChange={girisDegisti} />\n                <button onClick={gorevEkle}>Ekle</button>\n            </div>\n            <div>\n                <h3>Aktif Görevler</h3>\n                <ul>\n                    {gorevler.map(g => (\n                        <li key={g.id}>\n                            {g.isim}\n                            <button onClick={() => tamamlandi(g.id)}>Tamamlandı</button>\n                            <button onClick={() => gorevSil(g.id)}>Sil</button>\n                        </li>\n                    ))}\n                </ul>\n            </div>\n            <div>\n                <h3>Tamamlanan Görevler</h3>\n                <ul>\n                    {tamamlananGorevler.map(g => (\n                        <li key={g.id}>\n                            <del>{g.isim}</del>\n                            <button onClick={() => gorevSil(g.id)}>Sil</button>\n                        </li>\n                    ))}\n                </ul>\n            </div>\n        </div>\n    );\n};\n\nexport default YapilacaklarListesi;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}