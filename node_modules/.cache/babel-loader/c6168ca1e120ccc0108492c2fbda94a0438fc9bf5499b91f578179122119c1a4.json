{"ast":null,"code":"var _jsxFileName = \"/Users/didaryilmaz/Documents/GitHub/ToDoList/src/RegisterPage.js\",\n  _s = $RefreshSig$();\n// src/RegisterPage.js\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegisterPage = () => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const navigate = useNavigate();\n  const handleRegister = async e => {\n    e.preventDefault();\n    console.log('Kayıt işlemi başlatıldı:', {\n      username,\n      password\n    });\n    // API'ye POST isteği gönder\n\n    const user = await fetch('http://localhost:5103/api/auth/getAll', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    user.json().then(data => {\n      console.log('Kullanıcılar:', data);\n    });\n    const response = await fetch('http://localhost:5103/api/auth/register', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username,\n        password\n      })\n    });\n    if (response.ok) {\n      alert('Kayıt başarılı!');\n      navigate('/login'); // login sayfasına yönlendir\n    } else {\n      response.json().then(data => {\n        alert(`Kayıt hatası: ${data.message}`);\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleRegister,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Kullan\\u0131c\\u0131 Ad\\u0131\",\n        value: username,\n        onChange: e => setUsername(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"\\u015Eifre\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Kay\\u0131t Ol\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n_s(RegisterPage, \"IIPwWddbiEHHD7aoL5eQeOR7fTk=\", false, function () {\n  return [useNavigate];\n});\n_c = RegisterPage;\nexport default RegisterPage;\nvar _c;\n$RefreshReg$(_c, \"RegisterPage\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","RegisterPage","_s","username","setUsername","password","setPassword","navigate","handleRegister","e","preventDefault","console","log","user","fetch","method","headers","json","then","data","response","body","JSON","stringify","ok","alert","message","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","_c","$RefreshReg$"],"sources":["/Users/didaryilmaz/Documents/GitHub/ToDoList/src/RegisterPage.js"],"sourcesContent":["// src/RegisterPage.js\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nconst RegisterPage = () => {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const navigate = useNavigate();\n\n    const handleRegister = async (e) => {\n        e.preventDefault();\n        console.log('Kayıt işlemi başlatıldı:', { username, password });\n        // API'ye POST isteği gönder\n\nconst user = await fetch('http://localhost:5103/api/auth/getAll', {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        });\n        user.json().then((data) => {\n            console.log('Kullanıcılar:', data);\n        }\n        );\n        const response = await fetch('http://localhost:5103/api/auth/register', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ username, password }),\n        });\n\n        if (response.ok) {\n            alert('Kayıt başarılı!');\n            navigate('/login'); // login sayfasına yönlendir\n        } else {\n            response.json().then((data) => {\n                alert(`Kayıt hatası: ${data.message}`);\n            }\n            );\n        }\n    };\n\n    return (\n        <div>\n            <h2>Register</h2>\n            <form onSubmit={handleRegister}>\n                <input\n                    type=\"text\"\n                    placeholder=\"Kullanıcı Adı\"\n                    value={username}\n                    onChange={(e) => setUsername(e.target.value)}\n                    required\n                />\n                <input\n                    type=\"password\"\n                    placeholder=\"Şifre\"\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                    required\n                />\n                <button type=\"submit\">Kayıt Ol</button>\n            </form>\n        </div>\n    );\n};\n\nexport default RegisterPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}